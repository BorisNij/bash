#!/bin/bash

# Function to display system stats in tabular form
function sys_stat_tbl {
  echo "User     CPU     Memory      Processes"
  echo "---------------------------------------"
  ps -u "${users[@]}" -o user=,%cpu=,%mem=,args= | awk '
    BEGIN {
      print "User     CPU     Memory      Processes"
      print "---------------------------------------"
    }
    {
      if (!user_stats[$1]) {
        user_stats[$1] = { cpu_total: 0, mem_total: 0, process_count: 0 }
      }
      user_stats[$1].cpu_total += $2
      user_stats[$1].mem_total += $3
      user_stats[$1].process_count++
    }
    END {
      for (user in user_stats) {
        printf "%-8s %-8s %-10s %-10s\n", user, user_stats[user].cpu_total, user_stats[user].mem_total, user_stats[user].process_count
      }
    }
  '
}

# Function to display system stats in json format
function sys_stat_json {
  ps -u "${users[@]}" -o user=,%cpu=,%mem=,args= | awk '
    BEGIN {
      output = "["
    }
    {
      if (!user_stats[$1]) {
        user_stats[$1] = { cpu_total: 0, mem_total: 0, process_count: 0 }
      }
      user_stats[$1].cpu_total += $2
      user_stats[$1].mem_total += $3
      user_stats[$1].process_count++
    }
    END {
      for (user in user_stats) {
        output = output sprintf("{\"user\":\"%s\",\"cpu\":\"%.1f\",\"memory\":\"%.1f\",\"processes\":\"%d\"},", user, user_stats[user].cpu_total, user_stats[user].mem_total, user_stats[user].process_count)
      }
      output = substr(output, 0, length(output)-1)
      output = output "]"
      print output
    }
  '
}

# Check if group name is provided
if [ "$#" -lt 1 ]; then
  echo "Error: Group name not provided."
  echo "Usage: $0 <group_name> [table|json]"
  exit 1
fi

# Get all users in the group
group=$1
users=($(getent group "$group" | cut -d: -f4 | tr ',' '\n'))

# Check if output format is provided
if [ "$#" -eq 2 ]; then
  format=$2
else
  format="table"
fi

# Call the appropriate function based on output format
if [ "$format" == "table" ]; then
  sys_stat_tbl
elif [ "$format" == "json" ]; then
  sys_stat_json
else
  echo "Error: Invalid output format."
  echo "Usage: $0 <group_name> [table|json]"
  exit 1
fi
